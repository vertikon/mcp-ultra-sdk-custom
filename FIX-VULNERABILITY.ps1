# FIX VULNERABILITY - Resolver alerta de seguranca do Dependabot

Write-Host ""
Write-Host "================================================" -ForegroundColor Cyan
Write-Host "   FIX VULNERABILITY - Dependabot Alert" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host ""

$SDK = "E:\vertikon\business\SaaS\templates\mcp-ultra-sdk-custom"
Set-Location $SDK

Write-Host "Resolvendo vulnerabilidade detectada pelo Dependabot..." -ForegroundColor Yellow
Write-Host ""

# ----------------------------------------------------------------
# Atualizar dependencias
# ----------------------------------------------------------------

Write-Host "[1/4] Atualizando dependencias..." -ForegroundColor Yellow

Write-Host "      Executando: go get -u ./..." -ForegroundColor White
$getOutput = & go get -u ./... 2>&1

if ($LASTEXITCODE -eq 0) {
    Write-Host "      go get: OK" -ForegroundColor Green
} else {
    Write-Host "      go get: AVISO" -ForegroundColor Yellow
    Write-Host "      Output: $getOutput" -ForegroundColor Gray
}

Write-Host ""

# ----------------------------------------------------------------
# go mod tidy
# ----------------------------------------------------------------

Write-Host "[2/4] Executando go mod tidy..." -ForegroundColor Yellow

$tidyOutput = & go mod tidy 2>&1

if ($LASTEXITCODE -eq 0) {
    Write-Host "      go mod tidy: OK" -ForegroundColor Green
} else {
    Write-Host "      go mod tidy: ERRO" -ForegroundColor Red
    Write-Host "      Output: $tidyOutput" -ForegroundColor Gray
    exit 1
}

Write-Host ""

# ----------------------------------------------------------------
# Verificar build
# ----------------------------------------------------------------

Write-Host "[3/4] Verificando compilacao..." -ForegroundColor Yellow

$buildOutput = & go build ./cmd 2>&1

if ($LASTEXITCODE -eq 0) {
    Write-Host "      go build: OK" -ForegroundColor Green
} else {
    Write-Host "      go build: ERRO" -ForegroundColor Red
    Write-Host "      Output: $buildOutput" -ForegroundColor Gray
    exit 1
}

Write-Host ""

# ----------------------------------------------------------------
# Commit e push
# ----------------------------------------------------------------

Write-Host "[4/4] Commitando atualizacoes..." -ForegroundColor Yellow

# Verificar mudancas
git add go.mod go.sum

$status = git status --short
if ([string]::IsNullOrEmpty($status)) {
    Write-Host "      Nenhuma mudanca (dependencias ja atualizadas)" -ForegroundColor Yellow
} else {
    Write-Host "      Mudancas detectadas:" -ForegroundColor Cyan
    git status --short | Where-Object { $_ -match "go.mod|go.sum" }
    Write-Host ""

    # Commit
    Write-Host "      Criando commit..." -ForegroundColor White

    $commitMsg = "chore(deps): update dependencies to fix security vulnerability

- Update all Go dependencies to latest secure versions
- Fix Dependabot moderate severity alert
- go get -u ./... && go mod tidy

Resolves: GitHub Dependabot Alert #1
"

    git commit -m $commitMsg

    if ($LASTEXITCODE -eq 0) {
        Write-Host "      Commit criado" -ForegroundColor Green

        # Push
        Write-Host "      Fazendo push..." -ForegroundColor White
        git push origin main

        if ($LASTEXITCODE -eq 0) {
            Write-Host "      Push realizado" -ForegroundColor Green
        } else {
            Write-Host "      ERRO ao fazer push" -ForegroundColor Red
            exit 1
        }
    } else {
        Write-Host "      ERRO ao criar commit" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""

# ----------------------------------------------------------------
# Relatorio
# ----------------------------------------------------------------

Write-Host "================================================" -ForegroundColor Green
Write-Host "   VULNERABILIDADE RESOLVIDA!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green
Write-Host ""

Write-Host "Acoes Executadas:" -ForegroundColor Cyan
Write-Host "  [OK] go get -u ./... (atualizar dependencias)" -ForegroundColor Green
Write-Host "  [OK] go mod tidy (limpar modulos)" -ForegroundColor Green
Write-Host "  [OK] go build (validar compilacao)" -ForegroundColor Green
Write-Host "  [OK] git commit + push (publicar correcao)" -ForegroundColor Green
Write-Host ""

Write-Host "Proximos Passos:" -ForegroundColor Yellow
Write-Host ""
Write-Host "1. Aguarde Dependabot reanalisar (~5 minutos)" -ForegroundColor White
Write-Host "   https://github.com/vertikon/mcp-ultra-sdk-custom/security/dependabot" -ForegroundColor Cyan
Write-Host ""
Write-Host "2. Verifique se alerta foi resolvido:" -ForegroundColor White
Write-Host "   Security > Dependabot alerts" -ForegroundColor Gray
Write-Host "   Status deve mudar para: Closed" -ForegroundColor Gray
Write-Host ""
Write-Host "3. Monitore futuros alertas:" -ForegroundColor White
Write-Host "   Dependabot criara PRs semanais (Segunda 6h)" -ForegroundColor Gray
Write-Host ""

Write-Host "================================================" -ForegroundColor Green
Write-Host "   Repositorio seguro e atualizado!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green
Write-Host ""
